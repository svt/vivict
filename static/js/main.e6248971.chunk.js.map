{"version":3,"sources":["components/VideoViewer/VideoControls.js","util/HlsUtils.js","util/DashUtils.js","components/VideoViewer/VideoPlayer.js","util/Mp4Info.js","components/SourceSelector/index.js","util/DragNDrop.js","components/SplitView/index.js","util/formatTime.js","components/VideoViewer/TimeDisplay.js","components/VideoViewer/OffsetIndicator.js","keymap.js","components/Help/index.js","util/SourceUtils.js","components/VideoViewer/index.js","util/FullscreenUtils.js","util/CopyClipboard.js","App.js","serviceWorker.js","index.js"],"names":["VideoControls","onPlay","onStep","onFullscreen","playing","onSeek","position","duration","className","onClick","event","stopPropagation","cx","console","log","type","value","min","max","step","onInput","e","target","nextPos","parseFloat","isHlsPlaylist","url","split","endsWith","resolveVariantUrl","mainUrl","variantUrl","indexOf","replace","isDashManifest","VideoPlayer","Component","constructor","props","super","this","state","zoom","panHorizontal","panVertical","onTimeUpdate","bind","onMetadataLoaded","setVideoRef","videoRef","videoElement","currentTime","onDurationSet","play","pause","quickSeek","pos","zoomIn","zoomOut","zoomFactor","newPanHorizontal","document","documentElement","clientWidth","newPanVertical","clientHeight","setState","pan","deltaX","deltaY","resetPanZoom","offsetHeight","Promise","reject","resolve","addEventListener","once","variant","loadHls","loadDash","src","setVariant","dash","setQualityFor","hls","currentLevel","detachMedia","attachSource","dashjs","MediaPlayer","create","updateSettings","streaming","fastSwitchEnabled","abr","autoSwitchBitrate","audio","video","initialize","Hls","loadSource","attachMedia","componentDidMount","componentWillUnmount","removeEventListener","render","width","parseInt","muted","ref","tabIndex","style","left","top","async","fetchRange","range","response","fetch","method","headers","start","end","ok","Error","status","data","arrayBuffer","contentLength","get","contentRange","mp4Info","done","mp4boxfile","MP4Box","createFile","mp4InfoPromise","onError","onReady","info","onData","isDone","chunkSize","startsWith","res","fileStart","responseData","totalSize","Math","length","fetchUntilDone","appendBuffer","catch","SourceSelector","urlInputKeyDown","source","defaultSource","metadata","showUrlInput","visible","setInputRef","inputRef","input","setDropAreaRef","dropAreaRef","dropArea","manifestText","text","parser","Parser","push","variants","manifest","playlists","map","playlist","uri","bandwidth","attributes","BANDWIDTH","RESOLUTION","selectedVariant","parseHlsManifest","parse","JSON","stringify","i","index","parseDashManifest","videoTrack","videoTracks","bitrate","height","changeSource","sourceSelector","selectorEl","parentNode","side","classList","contains","dragArea","body","bbox","getBoundingClientRect","dragging","isMouseOutsideThisHalf","pageX","resetDraggingUI","remove","preventDefault","dataTransfer","types","includes","dropEffect","add","handleDrop","_","setupDragAndDrop","keyCode","onUrlSelected","hideUrlInput","onBlur","handleChange","evt","files","onChange","file","name","window","URL","createObjectURL","onFileSelected","onVariantSelected","Object","assign","onVariantChange","loadHlsMetadata","loadDashMetadata","loadMp4Metadata","prevSource","loadMetadata","then","revokeObjectURL","componentDidUpdate","prevProps","prevState","snapshot","focus","currentUrl","formatMetadata","round","renderSelectedSource","metadataSpan","options","selected","title","cursor","hidden","defaultValue","SplitView","mouseMove","mouseDown","mouseUp","splitPercent","dragStart","setSplitViewContainerRef","splitViewContainer","setSplitViewClipperRef","splitViewClipper","passive","ignoreNextClick","x","clientX","y","clientY","shouldComponentUpdate","nextProps","nextState","tracking","setSplitPosition","onDrag","movementX","movementY","trackLocation","rect","offsetWidth","splitBorderVisible","leftSideContent","children","zeroPad","num","formatTime","hours","floor","minutes","seconds","frames","TimeDisplay","sign","offset","OffsetIndicator","command","keys","description","COMMANDS","PLAY","PAUSE","PLAY_PAUSE","STEP_FORWARD_FRAME","STEP_BACKWARD_FRAME","STEP_FORWARD","STEP_BACKWARD","FULLSCREEN","SHARE","TOGGLE_TRACKING","LEFT_ONLY","RIGHT_ONLY","TIMESHIFT_DECREASE","TIMESHIFT_INCREASE","TIMESHIFT_RESET","ZOOM_IN","ZOOM_OUT","PAN_UP","PAN_DOWN","PAN_RIGHT","PAN_LEFT","REST_PAN_ZOOM","TOGGLE_HELP","TOGGLE_SPLIT_BORDER_VISIBLE","KEY_MAP","reduce","result","key","Help","generateKeymapHelp","copyrightText","githubLink","HelpButton","href","sourceType","isDashOrHls","urlParams","URLSearchParams","location","search","DEFAULT_SOURCE","av1","leftVideoUrl","rightVideoUrl","leftVideoVariant","Number","rightVideoVariant","startPosition","hideSourceSelector","Boolean","hideHelp","DEFAULT_SOURCE_LEFT","DEFAULT_SOURCE_RIGHT","VideoViewer","shortCutHandlers","playPause","fullscreen","toggleTracking","splitView","changeOffset","createShareUrl","playForward","toggleShowHelp","toggleSplitBorderVisible","action","setVideoViewerRef","videoViewer","setRightVideoRef","rightVideo","setLeftVideoRef","leftVideo","setSplitViewRef","leftSource","rightSource","rightVideoOffset","showHelp","showSourceSelector","playReverse","userDefinedPanZoom","dir","onFullScreenChange","setPosition","setPlaying","setLeftSource","setRightSource","delta","seek","steps","newTime","elem","fullScreen","mozFullScreen","webkitIsFullScreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","time","syncPlayers","playbackRate","all","alert","leftVariantParam","rightVariantParam","path","host","pathname","dummy","createElement","appendChild","select","execCommand","removeChild","copyToClipboard","changeVariant","pauseAndExecute","wasPlaying","wasPlayingReverse","trace","keyMap","handlers","dx","dy","size","n","onLeftSourceChange","onLeftVariantChange","onRightSourceChange","onRightVariantChange","App","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e6248971.chunk.js","sourcesContent":["import React from 'react';\nimport cx from 'classnames';\nimport {FiPlay, FiPause, FiSkipBack, FiSkipForward, FiMaximize} from 'react-icons/fi';\n\n\nconst VideoControls = ({onPlay, onStep, onFullscreen, playing, onSeek, position, duration}) => {\n\n    return (<div className=\"controls\">\n        <button className=\"btn btn-default\" onClick={(event) => {\n            onStep(-1);\n            event.stopPropagation();\n        }}><FiSkipBack /></button>\n        <button className={cx('btn', 'btn-default') }\n                onClick={(event) => {\n                    console.log('play/pause: ' );\n                    onPlay();\n                    event.stopPropagation();\n                }}>{playing ? (<FiPause/>) : (<FiPlay />)}</button>\n        <button className=\"btn btn-default\" onClick={(event) => {\n            onStep(1);\n            event.stopPropagation();\n        }}><FiSkipForward/></button>\n\n        <input type=\"range\" value={position} min=\"0\" max={duration} step=\"0.04\" onInput={(e) => {\n            console.log(`range value: ${e.target.value}`);\n            const nextPos = parseFloat(e.target.value);\n            onSeek(nextPos);\n            e.stopPropagation();\n        }} />\n\n        <button className=\"btn btn-default glyphicon glyphicon-fullscreen\" onClick={(event) => {\n            onFullscreen();\n            event.stopPropagation();\n        }}><FiMaximize/></button>\n    </div>)\n};\n\nexport default VideoControls;","import {Parser} from 'm3u8-parser';\n\nexport function isHlsPlaylist(url) {\n    if (!url) return false;\n    return url.split('?')[0].endsWith('.m3u8');\n}\n\nexport async function parseHlsManifest(url) {\n    const response = await fetch(url);\n    const manifestText = await response.text();\n    const parser = new Parser();\n    parser.push(manifestText);\n    parser.end();\n    const manifest = parser.manifest;\n    const variants = manifest.playlists.map( playlist => {\n        return {\n            url: resolveVariantUrl(url, playlist.uri),\n            bandwidth: playlist.attributes.BANDWIDTH,\n            ...playlist.attributes.RESOLUTION,\n        };\n    });\n    return {\n        mainUrl: url,\n        variants,\n        selectedVariant: 0\n    };\n}\n\nfunction resolveVariantUrl(mainUrl, variantUrl) {\n    if (isAbsoluteUrl(variantUrl)) {\n        return variantUrl;\n    }\n    return mainUrl.replace(/\\/[^/]*$/, '/' + variantUrl)\n}\n\nfunction isAbsoluteUrl(url) {\n    return (url.indexOf('http://') === 0 || url.indexOf('https://') === 0)\n}","import {parse} from \"mpd-parser/src/\";\n\nexport async function parseDashManifest(url) {\n    const response = await fetch(url);\n    const manifestText = await response.text();\n    console.log(\"RAW DASH MANIFEST:\" + manifestText);\n    const manifest = parse(manifestText);\n    console.log(\"DASH MANIFEST:\\n\" + JSON.stringify(manifest));\n\n    const variants = manifest.playlists.map( (playlist, i) => {\n        return {\n            url: null,\n            index: i,\n            bandwidth: playlist.attributes.BANDWIDTH,\n            ...playlist.attributes.RESOLUTION,\n        };\n    });\n    return {\n        mainUrl: url,\n        variants,\n        selectedVariant: 0\n    };\n}\n\nexport function isDashManifest(url) {\n    if (!url) return false;\n    return url.split('?')[0].endsWith('.mpd');\n}\n","import React, {Component} from 'react';\nimport Hls from 'hls.js'\nimport dashjs from 'dashjs';\nimport {isHlsPlaylist} from \"../../util/HlsUtils\";\nimport {isDashManifest} from \"../../util/DashUtils\";\n\nconst zoomInMultiplier = 1.1;\nconst zoomOutMultiplier = 1/zoomInMultiplier;\n\nclass VideoPlayer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            zoom: 1,\n            panHorizontal: 0,\n            panVertical: 0\n        };\n        this.onTimeUpdate = this.onTimeUpdate.bind(this);\n        this.onMetadataLoaded = this.onMetadataLoaded.bind(this);\n        this.setVideoRef =  (videoRef) => {\n            this.videoElement = videoRef;\n        };\n    }\n\n    onTimeUpdate() {\n        if (this.props.onTimeUpdate) {\n            this.props.onTimeUpdate(this.videoElement.currentTime);\n        }\n    }\n\n    onMetadataLoaded() {\n        if (this.props.onDurationSet) {\n            this.props.onDurationSet(this.videoElement.duration);\n        }\n    }\n\n    async play() {\n        return this.videoElement.play();\n    }\n\n    pause() {\n        this.videoElement.pause();\n    }\n\n    quickSeek(pos) {\n        this.videoElement.currentTime = pos;\n    }\n\n    zoomIn() {\n        this.zoom(zoomInMultiplier);\n    }\n\n    zoomOut() {\n        this.zoom(zoomOutMultiplier);\n    }\n\n    zoom(zoomFactor) {\n        const newPanHorizontal = (1 - zoomFactor ) / 2 * document.documentElement.clientWidth +\n            zoomFactor * this.state.panHorizontal;\n        const newPanVertical = (1 - zoomFactor) / 2 * document.documentElement.clientHeight +\n            zoomFactor * this.state.panVertical;\n        this.setState({\n            zoom: this.state.zoom * zoomFactor,\n            panHorizontal: newPanHorizontal,\n            panVertical: newPanVertical\n        });\n    }\n\n    pan(deltaX, deltaY) {\n        this.setState({\n            panHorizontal: this.state.panHorizontal + deltaX,\n            panVertical: this.state.panVertical + deltaY});\n    }\n\n    resetPanZoom() {\n        const clientHeight = document.documentElement.clientHeight;\n        const videoElementHeight = this.videoElement.offsetHeight / this.state.zoom;\n        const panVertical = (clientHeight - videoElementHeight) / 2;\n        this.setState({\n            zoom: 1,\n            panHorizontal: 0,\n            panVertical: panVertical\n        });\n    }\n\n    async seek(pos) {\n        if (pos > this.videoElement.duration) {\n            return Promise.reject(`Invalid seek position: ${pos}, media duration is ${this.videoElement.duration}`);\n        }\n        return new Promise((resolve, reject) => {\n            this.videoElement.addEventListener('seeked', () => {\n                resolve();\n            }, { once: true});\n            this.videoElement.currentTime = pos;\n        })\n    }\n\n\n    async loadSource(url, variant) {\n        console.log(`load source: ${url} ${variant}`);\n        return new Promise((resolve, reject) => {\n            this.videoElement.addEventListener('canplay',\n                () => {\n                    resolve();\n                },\n                { once: true });\n            if (isHlsPlaylist(url)) {\n                this.loadHls(url, variant)\n            } else if (isDashManifest(url)) {\n                this.loadDash(url, variant);\n            } else {\n                this.videoElement.src = url;\n            }\n        });\n    }\n\n    setVariant(variant) {\n        console.log(`setVariant: ${variant}`);\n        if (this.state.dash) {\n            this.state.dash.setQualityFor('video', variant);\n        } else if (this.state.hls) {\n            this.state.hls.currentLevel = variant;\n        }\n    }\n\n    loadDash(url, variant) {\n        if (this.state.hls) {\n            this.state.hls.detachMedia();\n            this.setState({hls: null});\n        }\n        let dash = this.state.dash;\n        this.videoElement.addEventListener('canplay',\n            () => {\n                this.state.dash.setQualityFor('video', variant);\n            },\n            {once: true});\n        if (!dash) {\n            dash = dashjs.MediaPlayer().create();\n            this.setState({dash});\n            dash.updateSettings({\n                streaming: {\n                    fastSwitchEnabled: true,\n                    abr: {\n                        autoSwitchBitrate: {audio: false, video: false}\n                    }\n                }\n            });\n            dash.initialize(this.videoElement, url, false);\n        } else {\n            dash.attachSource(url);\n        }\n    }\n\n    loadHls(url, variant) {\n        this.setState({dash: null});\n        let hls = this.state.hls;\n        if (!hls) {\n            hls = new Hls();\n            this.setState({hls});\n        }\n        hls.loadSource(url);\n        hls.attachMedia(this.videoElement);\n        hls.currentLevel = variant;\n    }\n\n    currentTime() {\n        return this.videoElement.currentTime;\n    }\n\n    componentDidMount() {\n        this.videoElement.addEventListener('timeupdate', this.onTimeUpdate);\n        this.videoElement.addEventListener('loadedmetadata', this.onMetadataLoaded)\n    }\n\n    componentWillUnmount() {\n        this.videoElement.removeEventListener('timeupdate', this.onTimeUpdate);\n        this.videoElement.removeEventListener('loadedmetadata', this.onMetadataLoaded)\n    }\n\n    render() {\n        const width = parseInt(100 * this.state.zoom) + 'vw';\n        return (\n            <video muted={this.props.muted} ref={this.setVideoRef}\n                   tabIndex=\"-1\"\n                   style={{\n                       width: width,\n                       left: this.state.panHorizontal + 'px',\n                       top: this.state.panVertical + 'px'\n                   }}\n            >\n            </video>\n        )\n    }\n}\n\nexport default VideoPlayer;","import MP4Box from 'mp4box';\n\nasync function fetchUntilDone(url, onData, isDone, chunkSize = 10 * 1024 * 1024) {\n    if (url.startsWith(\"blob:\")) {\n        const res = await fetch(url);\n        const data = await res.arrayBuffer();\n        data.fileStart = 0;\n        onData(data);\n        if (!isDone()) {\n            throw Error(\"Failed to parse mp4Info\");\n        }\n        return;\n    }\n    let start = 0;\n    let end = chunkSize;\n    while (!isDone()) {\n        const responseData = await fetchRange(url, { start, end });\n        const data = responseData.data;\n        const totalSize = parseInt(responseData.contentRange.split('/')[1]);\n        data.fileStart = start;\n        onData(data);\n        if (end === totalSize) break;\n        start = end;\n        end = Math.min(totalSize, start + chunkSize);\n        if (data.length < chunkSize) break;\n    }\n}\n\nasync function fetchRange(url, range) {\n    const response = await fetch(url, {\n        method: \"GET\",\n        headers: {\n            'Range': `bytes=${range.start}-${range.end}`\n        }\n    });\n    if (!response.ok) {\n        throw Error(`Fetch failed with status: ${response.status}`);\n    }\n    return {\n        data: await response.arrayBuffer(),\n        contentLength: response.headers.get('Content-Length'),\n        contentRange: response.headers.get('Content-Range')\n    }\n}\n\nexport async function mp4Info(url) {\n    console.log(`mp4Info: ${url}`);\n    let done = false;\n    const mp4boxfile = new MP4Box.createFile();\n\n    const mp4InfoPromise = new Promise((resolve, reject) => {\n        mp4boxfile.onError = e => {\n            done = true;\n            console.log(e);\n            reject(e);\n        };\n\n        mp4boxfile.onReady = (info) => {\n            done = true;\n            resolve(info);\n        };\n\n\n        fetchUntilDone(url,\n            (data) => {\n                mp4boxfile.appendBuffer(data)\n            },\n            () => done)\n            .catch(e => {\n                reject(e);\n            });\n\n    });\n\n    return mp4InfoPromise\n}","import React, { Component } from 'react';\nimport { FiFile, FiGlobe } from \"react-icons/fi\";\nimport cx from 'classnames';\nimport './index.css';\nimport { isHlsPlaylist, parseHlsManifest } from '../../util/HlsUtils';\nimport { mp4Info } from '../../util/Mp4Info';\nimport { isDashManifest, parseDashManifest } from \"../../util/DashUtils\";\nimport { setupDragAndDrop } from '../../util/DragNDrop';\n\nclass SourceSelector extends Component {\n\n    constructor(props) {\n        super(props);\n        this.stopPropagation = this.stopPropagation.bind(this);\n        this.urlInputKeyDown = this.urlInputKeyDown.bind(this);\n        this.state = {\n            source: this.props.defaultSource,\n            metadata: null,\n            showUrlInput: false,\n            visible: this.props.visible\n        };\n    }\n\n    setInputRef(inputRef) {\n        this.input = inputRef;\n    }\n    setDropAreaRef(dropAreaRef) {\n        this.dropArea = dropAreaRef;\n    }\n\n    async loadHlsMetadata(url) {\n        const metadata = await parseHlsManifest(url);\n        this.setState({ metadata });\n    }\n\n    async loadDashMetadata(url) {\n        const metadata = await parseDashManifest(url);\n        this.setState({ metadata })\n    }\n\n    async loadMp4Metadata(url) {\n        try {\n            const mp4Metadata = await mp4Info(url);\n\n            const videoTrack = mp4Metadata.videoTracks[0];\n            const metadata = {\n                variants: [\n                    {\n                        bitrate: videoTrack.bitrate,\n                        width: videoTrack.video.width,\n                        height: videoTrack.video.height\n                    }\n                ]\n            };\n            this.setState({ metadata })\n        } catch (e) {\n            console.log(`Failed to get mp4 info: ${e}`);\n            const metadata = {\n                variants: [\n                    {\n                        bitrate: 0,\n                        width: 0,\n                        height: 0\n                    }\n                ]\n            };\n            this.setState({ metadata });\n        }\n    }\n\n    componentDidMount() {\n        this.changeSource(this.state.source);\n        setupDragAndDrop(this);\n        console.log('Source selector add event listeners');\n        this.input.addEventListener('keydown', this.urlInputKeyDown);\n        this.input.addEventListener('keypress', this.stopPropagation);\n        this.input.addEventListener('keyup', this.stopPropagation);\n    }\n\n    componentWillUnmount() {\n        this.input.removeEventListener('keydown', this.urlInputKeyDown);\n        this.input.removeEventListener('keypress', this.stopPropagation);\n        this.input.removeEventListener('keyup', this.stopPropagation);\n    }\n\n    stopPropagation(e) {\n        e.stopPropagation();\n    }\n\n    urlInputKeyDown(e) {\n        e.stopPropagation();\n        switch (e.keyCode) {\n            case 13:\n                this.onUrlSelected(e.target.value);\n                break;\n            case 27:\n                this.hideUrlInput();\n                break;\n            default:\n        }\n    }\n\n    onBlur() {\n        console.log('onBlur');\n        this.setState({ showUrlInput: false })\n    }\n\n    handleChange(evt) {\n        if (evt.target.files) {\n            this.props.onChange(evt.target.files[0])\n        }\n    }\n    handleDrop(evt) {\n        if (evt.dataTransfer.files) {\n            const file = evt.dataTransfer.files[0];\n            this.changeSource({\n                type: 'file',\n                name: file.name,\n                url: window.URL.createObjectURL(file),\n            });\n        }\n    }\n\n    showUrlInput() {\n        this.setState({ showUrlInput: true });\n    }\n\n    hideUrlInput() {\n        this.setState({ showUrlInput: false });\n    }\n\n    onUrlSelected(url) {\n        console.log(`url: ${url}`);\n        this.hideUrlInput();\n        let type = 'url';\n        if (isHlsPlaylist(url)) {\n            type = 'hls';\n        } else if (isDashManifest(url)) {\n            type = 'dash';\n        }\n        this.changeSource({\n            type,\n            name: url,\n            url: url,\n            variant: 0\n        })\n    }\n\n    onFileSelected(evt) {\n        if (evt.target.files && evt.target.files[0]) {\n            console.log('file select', evt.target.files);\n            const file = evt.target.files[0];\n            this.changeSource({\n                type: 'file',\n                name: file.name,\n                url: window.URL.createObjectURL(file),\n            });\n        }\n    }\n\n    onVariantSelected(evt) {\n        const selectedVariant = parseInt(evt.target.value);\n        this.setVariant(selectedVariant);\n    }\n\n    setVariant(selectedVariant) {\n        const source = Object.assign({}, this.state.source, { variant: selectedVariant });\n        this.setState({ source });\n        if (this.props.onVariantChange) {\n            this.props.onVariantChange(selectedVariant);\n        }\n    }\n\n    async loadMetadata(source) {\n        if (source.type === 'hls') {\n            await this.loadHlsMetadata(source.url)\n        } else if (source.type === 'dash') {\n            await this.loadDashMetadata(source.url);\n        } else {\n            await this.loadMp4Metadata(source.url);\n        }\n    }\n\n    changeSource(source) {\n        const prevSource = this.state.source;\n        this.loadMetadata(source)\n            .then(() => {\n                this.setState({ source });\n                this.props.onChange(Object.assign({}, source));\n                if (prevSource.type === 'file' && prevSource.url) {\n                    window.URL.revokeObjectURL(prevSource.url);\n                }\n            });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.state.showUrlInput) {\n            this.input.focus()\n        }\n    }\n\n    currentUrl() {\n        return this.state.source.type === 'file' ? '' : this.state.source.url;\n    }\n\n    formatMetadata(bitrate, width, height) {\n        return `[${Math.round(bitrate / 1000)}kbit/s ${width}x${height}]`\n    }\n\n    renderSelectedSource() {\n        if (this.state.showUrlInput) {\n            return null;\n        }\n        const metadata = this.state.metadata;\n        let metadataSpan = null;\n        if (metadata) {\n            if (metadata.variants.length > 1) {\n                const options = metadata.variants.map((variant, i) => {\n                    return (<option\n                        key={i}\n                        value={i}\n                        selected={i === this.state.source.variant}\n                    >\n                        {this.formatMetadata(variant.bandwidth, variant.width, variant.height)}\n                    </option>);\n                });\n                metadataSpan = (<select value={this.state.selectedVariant} onChange={(e) => this.onVariantSelected(e)}>{options}</select>);\n            } else if (metadata.variants.length === 1) {\n                const variant = metadata.variants[0];\n                metadataSpan = (<span>{this.formatMetadata(variant.bitrate, variant.width, variant.height)}</span>);\n            }\n        }\n        return (<div className=\"source-metadata\">\n            <div className=\"source-name\" title={this.state.source.name}>{this.state.source.name}</div>\n            <div>{metadataSpan}</div>\n        </div>);\n    }\n\n    render() {\n        return (\n            <div className={cx(\"source-selector\", this.props.className, { 'hidden': !this.props.visible })}>\n                <div className=\"source-buttons\">\n                    <div title=\"open URL\" className=\"url-button\" >\n                        <FiGlobe style={{ cursor: 'pointer' }} onClick={() => this.showUrlInput()} />\n                    </div>\n                    <label title=\"open local file\" className=\"source-file-input\" onClick={(evt) => {\n                        this.hideUrlInput();\n                        evt.stopPropagation()\n                    }}>\n                        <FiFile />\n                        <input type=\"file\" onChange={(evt) => this.onFileSelected(evt)} />\n                    </label>\n                </div>\n\n                <input className={cx('url-input',\n                    { hidden: !this.state.showUrlInput })}\n                    type=\"text\"\n                    ref={(ref) => this.setInputRef(ref)}\n                    onBlur={() => this.onBlur()}\n                    defaultValue={this.currentUrl()}\n                />\n\n                {this.renderSelectedSource()}\n\n\n                <div className=\"drop-area\" ref={(ref) => this.setDropAreaRef(ref)}></div>\n                \n            </div>\n        )\n    }\n}\n\nexport default SourceSelector;","\n\nexport function setupDragAndDrop(sourceSelector) {\n  // const dropArea = sourceSelector.dropArea;\n  const selectorEl = sourceSelector.dropArea.parentNode;\n  const side = sourceSelector.dropArea.parentNode.classList.contains('left-source-selector') ? 'left' : 'right';\n  const dragArea = document.body;\n  let bbox = selectorEl.getBoundingClientRect();\n  let dragging = false;\n\n  const isMouseOutsideThisHalf = event => event.pageX < bbox.left || event.pageX > (bbox.left + bbox.width);\n\n  dragArea.addEventListener('dragover', event => {\n    if (isMouseOutsideThisHalf(event)) {\n      resetDraggingUI();\n      return;\n    }\n\n    event.stopPropagation();\n    event.preventDefault();\n    if (event.dataTransfer?.types?.includes('Files')) {\n      // Style the drag-and-drop as a \"copy file\" operation.\n      event.dataTransfer.dropEffect = 'copy';\n\n      document.body.classList.add(`dropping--body-${side}`);\n      selectorEl.classList.add('dropping');\n      dragging = true;\n    } else {\n      // someone dragged text by mistake or something.\n      resetDraggingUI();\n    }\n  });\n\n  dragArea.addEventListener('drop', event => {\n    if (isMouseOutsideThisHalf(event)) { \n      return;\n    }\n    event.stopPropagation();\n    event.preventDefault();\n    resetDraggingUI();\n    sourceSelector.handleDrop(event);\n  });\n\n  // The mouseleave event is more reliable than dragleave when the user drops\n  // the file outside the window.\n  dragArea.addEventListener('mouseleave', _ => {\n    if (!dragging) return;\n    resetDraggingUI();\n  });\n\n\n  dragArea.addEventListener('dragenter', event => {\n    bbox = selectorEl.getBoundingClientRect();\n  });\n\n\n  function resetDraggingUI() {\n    document.body.classList.remove(`dropping--body-${side}`);\n    selectorEl.classList.remove('dropping');\n    dragging = false;\n  }\n}\n\n","import  React, {Component} from 'react';\nimport cx from 'classnames';\nimport './index.css';\n\n\nclass SplitView extends Component {\n    constructor(props) {\n        super(props);\n        this.mouseMove = this.mouseMove.bind(this);\n        this.mouseDown = this.mouseDown.bind(this);\n        this.mouseUp = this.mouseUp.bind(this);\n        console.log('Split view constructor');\n\n        this.state = {\n            splitPercent: 0,\n            dragStart: null,\n            dragging: false\n        };\n\n        this.setSplitViewContainerRef = splitViewContainer => {\n            this.splitViewContainer = splitViewContainer;\n\n        };\n\n        this.setSplitViewClipperRef = splitViewClipper => {\n            this.splitViewClipper = splitViewClipper;\n        };\n    }\n\n    componentDidMount() {\n        this.splitViewContainer.addEventListener(\"mousemove\", this.mouseMove, {passive: true});\n        this.splitViewContainer.addEventListener(\"mousedown\", this.mouseDown);\n        document.addEventListener(\"mouseup\", this.mouseUp);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener(\"mouseup\", this.mouseUp);\n        this.splitViewContainer.removeEventListener(\"mousedown\", this.mouseDown);\n        this.splitViewContainer.removeEventListener(\"mousemove\", this.mouseMove, {passive: true});\n    }\n\n    mouseUp(e) {\n        if (this.state.dragging) {\n            this.ignoreNextClick = true;\n        }\n        this.setState({dragStart: null, dragging: false});\n    }\n\n    onClick(e) {\n        if (this.ignoreNextClick) {\n            this.ignoreNextClick = false;\n        } else {\n            this.props.onClick(e);\n        }\n    }\n\n    mouseDown(e) {\n        this.setState({dragStart: {x: e.clientX, y: e.clientY}});\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return true;\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.tracking && !prevProps.tracking) {\n            this.setSplitPosition(this.state.splitPercent);\n        }\n    }\n\n    mouseMove(e) {\n        if (this.state.dragStart) {\n            this.setState({dragging: true});\n            this.props.onDrag(e.movementX, e.movementY);\n        } else {\n            this.trackLocation(e);\n        }\n    }\n\n    trackLocation(e) {\n        if (!this.splitViewContainer) {\n            return;\n        }\n        const rect = this.splitViewContainer.getBoundingClientRect();\n        const position = ((e.pageX - rect.left) / this.splitViewContainer.offsetWidth)*100;\n        if (position <= 100) {\n            this.setState({splitPercent: position});\n            if (this.props.tracking) {\n                this.setSplitPosition(position);\n            }\n        }\n    }\n\n    setSplitPosition(position) {\n        this.splitViewClipper.style.width = position+\"%\";\n    }\n\n    focus() {\n        this.splitViewContainer.focus();\n    }\n\n    render() {\n        return (\n            <div className={cx('split-view-container', {'dragging': this.state.dragging})} ref={(ref) => this.setSplitViewContainerRef(ref)}\n            tabIndex=\"-1\"\n            onClick={(e) => this.onClick(e) }>\n                <div className={cx(\"split-view-clipper\", {\"show-border\": this.props.splitBorderVisible})} ref={(ref) => this.setSplitViewClipperRef(ref)}>\n                    {this.props.leftSideContent}\n                </div>\n                {this.props.children}\n            </div>\n        )\n    }\n}\n\nexport default SplitView;\n","function formatTime(position) {\n    const hours = Math.floor(position / 3600);\n    const minutes = Math.floor((position % 3600) / 60);\n    const seconds = Math.floor(position % 60);\n    const frames = Math.floor((position - Math.floor(position)) / 0.04);\n    return zeroPad(hours) + ':' + zeroPad(minutes) + ':'\n        + zeroPad(seconds) + '.' + zeroPad(frames);\n}\n\nfunction zeroPad(num) {\n    return num < 10 ? '0' + num : '' + num;\n}\n\nexport default formatTime;","import React from 'react';\nimport formatTime from '../../util/formatTime';\n\nconst TimeDisplay = ({position}) => (<div className=\"time-display\">{formatTime(position)}</div>);\n\nexport default TimeDisplay;","import React from 'react';\n\nfunction sign(offset) {\n    return offset > 0 ? '+' : '';\n}\n\nconst OffsetIndicator = ({offset}) => {\n    if (offset === 0.0) {\n        return null;\n    }\n    return (<div className=\"offset-indicator\">offset: {sign(offset)}{offset * 0.04}</div>)\n};\n\nexport default OffsetIndicator;","\n\nconst command = (name, keys, description) => ({\n        name,\n        keys,\n        description\n});\n\nexport const COMMANDS = {\n        PLAY: command('PLAY', 'l', 'Play video'),\n        PAUSE: command('PAUSE', 'k', 'Pause video'),\n        PLAY_PAUSE: command('PLAY_PAUSE', 'space', 'Play/Pause video'),\n        STEP_FORWARD_FRAME: command('STEP_FORWARD_FRAME', '.', 'Step forward 1 frame'),\n        STEP_BACKWARD_FRAME: command('STEP_BACKWARD_FRAME', ',', 'Step backward 1 frame'),\n        STEP_FORWARD: command('STEP_FORWARD', ['/', '-'], 'Step forward 1 second'),\n        STEP_BACKWARD: command('STEP_BACKWARD', 'm', 'Step backward 1 second'),\n        FULLSCREEN: command('FULLSCREEN', 'f', 'Toggle full screen'),\n        SHARE: command('SHARE', 'c', 'Copy shareable url to clipboard'),\n        TOGGLE_TRACKING: command('TOGGLE_TRACKING', 't', 'Toggle split position follows mouse'),\n        LEFT_ONLY: command('LEFT_ONLY', ']', 'View only left video'),\n        RIGHT_ONLY: command('RIGHT_ONLY', '[', 'View only right video'),\n        TIMESHIFT_DECREASE: command('OFFSET_DECREASE', '<', 'Decrease timeshift between videos'),\n        TIMESHIFT_INCREASE: command('OFFSET_INCREASE', '>', 'Increase timeshift between videos'),\n        TIMESHIFT_RESET: command('OFFSET_RESET', 'r', 'Reset timeshift between videos'),\n        ZOOM_IN: command('ZOOM_IN', 'u', 'Zoom in'),\n        ZOOM_OUT: command('ZOOM_OUT', 'i', 'Zoom out'),\n        PAN_UP: command('PAN_UP', 'up', 'Pan up'),\n        PAN_DOWN: command('PAN_DOWN', 'down', 'Pan down'),\n        PAN_RIGHT: command('PAN_RIGHT', 'right', 'Pan right'),\n        PAN_LEFT: command('PAN_LEFT', 'left', 'Pan left'),\n        REST_PAN_ZOOM: command('RESET_PAN_ZOOM', '0', 'Reset pan and zoom to default'),\n        TOGGLE_HELP: command('TOOGLE_HELP', ['esc','?'], 'Toggle help window'),\n        TOGGLE_SPLIT_BORDER_VISIBLE: command('TOGGLE_SPLIT_BORDER_VISIBLE', 's', 'Toggle split border visible')\n};\n\n\nexport const KEY_MAP = Object.keys(COMMANDS).reduce((result, key) => Object.assign(result, {[COMMANDS[key].name]: COMMANDS[key].keys}), {});\n\nconsole.log(`KEY_MAP: ${JSON.stringify(KEY_MAP)}`);\n","import React from 'react';\nimport cx from 'classnames';\nimport {FiHelpCircle, FiX} from \"react-icons/fi\";\nimport './index.css';\nimport {COMMANDS} from '../../keymap';\n\n\nconst Help = ({visible, onClick}) => (\n    <div className={cx('help', {'hidden': !visible})}>\n        <div className='help-header'>\n            <h3 className={\"padding10\"}>Vivict - Vivict Video Comparison Tool</h3>\n            <div className='close-button' onClick={() => onClick()}>\n                <FiX />\n            </div>\n        </div>\n        <div>\n            <h4 className={\"padding10\"}>Keybindings:</h4>\n            {generateKeymapHelp()}\n            {copyrightText()}\n            {githubLink()}\n        </div>\n    </div>);\n\nconst HelpButton = ({onClick, className}) => (\n    <div className={\"help-button \" + className}\n    onClick={(e) => onClick(e)}>\n        <FiHelpCircle/>\n    </div>\n);\n\nconst generateKeymapHelp = () => {\n    //return Array.from(KEY_MAP, ([key, value]) => (\n    return Object.keys(COMMANDS).map(key => {\n        const command = COMMANDS[key];\n        return (\n            <div key={\"keybinding-\" + command.name}><span className={\"bold\"}>{command.keys}</span>{\"  \" + command.description}</div>\n        )\n    });\n};\n\nconst copyrightText = () => {\n    return (\n        <h4 className={\"padding10\"}>Copyright 2019 Sveriges Television AB.</h4>\n    )\n};\n\nconst githubLink = () => {\n    return <a href=\"https://github.com/SVT/vivict\" >Contribute on Github, released under MIT</a>\n};\n\nexport {Help, HelpButton}","import {isHlsPlaylist} from \"./HlsUtils\";\nimport {isDashManifest} from \"./DashUtils\";\n\nexport function sourceType(url) {\n    if (isHlsPlaylist(url)) {\n        return 'hls'\n    }\n    if (isDashManifest(url)) {\n        return 'dash';\n    }\n    return 'url';\n}\n\nexport function isDashOrHls(type) {\n    return type === 'hls' || type === 'dash';\n}","import React, {Component} from 'react';\nimport {HotKeys} from 'react-hotkeys';\nimport VideoControls from './VideoControls';\nimport VideoPlayer from './VideoPlayer';\nimport './index.css';\nimport SourceSelector from '../SourceSelector'\nimport SplitView from '../SplitView';\nimport TimeDisplay from './TimeDisplay';\nimport OffsetIndicator from './OffsetIndicator';\nimport {Help, HelpButton} from '../Help';\nimport {COMMANDS, KEY_MAP} from '../../keymap'\nimport {openFullscreen, isFullscreen, closeFullscreen} from \"../../util/FullscreenUtils\";\nimport {copyToClipboard} from \"../../util/CopyClipboard\";\nimport {FiPlay} from 'react-icons/fi';\nimport cx from 'classnames';\nimport {isHlsPlaylist} from \"../../util/HlsUtils\";\nimport {isDashOrHls, sourceType} from \"../../util/SourceUtils\";\n\nconst DEFAULT_SOURCES = {\n    hls: \"https://bitdash-a.akamaihd.net/content/sintel/hls/playlist.m3u8\",\n    dash: \"https://dash.akamaized.net/dash264/TestCases/2a/qualcomm/1/MultiResMPEG2.mpd\",\n    av1: \"https://storage.googleapis.com/bitmovin-demos/av1/stream.mpd\"\n};\n\n\nconst urlParams = new URLSearchParams(window.location.search);\nconst DEFAULT_SOURCE = DEFAULT_SOURCES[urlParams.get('defaultSource') ? urlParams.get('defaultSource') : 'hls'];\nconst leftVideoUrl = urlParams.get('leftVideoUrl') || DEFAULT_SOURCE;\nconst rightVideoUrl = urlParams.get('rightVideoUrl') || leftVideoUrl;\nconst leftVideoVariant = Number(urlParams.get('leftVideoVariant')) || 0;\nconst rightVideoVariant = Number(urlParams.get('rightVideoVariant')) || 0;\nconst startPosition = Number(urlParams.get('position')) || 0;\nconst hideSourceSelector = Boolean(urlParams.get('hideSourceSelector'));\nconst hideHelp = Boolean(urlParams.get('hideHelp'));\n\nconst DEFAULT_SOURCE_LEFT = {\n    type: sourceType(leftVideoUrl),\n    name: leftVideoUrl,\n    url: leftVideoUrl,\n    variant: leftVideoVariant,\n    position: startPosition\n};\nconst DEFAULT_SOURCE_RIGHT = {\n    type:  sourceType(rightVideoUrl),\n    name: rightVideoUrl,\n    url: rightVideoUrl,\n    variant: rightVideoVariant,\n    position: startPosition\n};\n\nclass VideoViewer extends Component {\n    constructor(props) {\n        super(props);\n        this.setVideoViewerRef = videoViewer => {\n            this.videoViewer = videoViewer;\n        };\n        this.setRightVideoRef = rightVideo => {\n            console.log('setRightVideoRef', rightVideo);\n            this.rightVideo = rightVideo;\n        };\n        this.setLeftVideoRef = leftVideo => {\n            this.leftVideo = leftVideo;\n        };\n        this.setSplitViewRef = splitView => {\n            this.splitView = splitView;\n        };\n        this.state = {\n            playing: false,\n            duration: 0,\n            position: 0,\n            leftSource: {name: \"NONE\", url: null, variant: leftVideoVariant},\n            rightSource:{name: \"NONE\", url: null, variant: rightVideoVariant},\n            tracking: true,\n            splitBorderVisible: true,\n            rightVideoOffset: 0,\n            showHelp: !hideHelp,\n            showSourceSelector: !hideSourceSelector,\n            playReverse: false,\n            userDefinedPanZoom: false\n        };\n        console.dir(this.state);\n\n        this.onFullScreenChange = this.onFullScreenChange.bind(this);\n    }\n\n    setPosition(position) {\n        this.setState({position});\n    }\n\n    setPlaying(playing) {\n        this.setState({playing})\n    }\n\n    setLeftSource(leftSource) {\n        this.setState({leftSource})\n    }\n\n    setRightSource(rightSource) {\n        this.setState({rightSource})\n    }\n\n    toggleTracking() {\n        this.setState({tracking: !this.state.tracking})\n    }\n\n    changeOffset(delta) {\n\n        if(delta === 0) {\n            this.setState({rightVideoOffset: delta});\n        } else {\n            this.setState({rightVideoOffset: this.state.rightVideoOffset + delta});\n        }\n\n        if (!this.state.playing) {\n            this.seek(this.leftVideo.currentTime());\n        } else {\n            this.pause()\n                .then(() => this.play())\n        }\n    }\n\n    playPause() {\n        if(this.state.playing) {\n            this.pause();\n        } else {\n            this.play();\n        }\n    }\n\n    async step(steps) {\n        const newTime = this.rightVideo.currentTime() + 0.04 * steps;\n        this.rightVideo.quickSeek(newTime);\n        this.leftVideo.quickSeek(newTime);\n    }\n\n    fullscreen() {\n        if(isFullscreen()) {\n            closeFullscreen();\n        } else {\n            openFullscreen(this.videoViewer);\n        }\n    }\n\n    onTimeUpdate(time) {\n        this.setPosition(time);\n    }\n\n    onDurationSet(duration) {\n        this.setState({duration})\n    }\n\n    syncPlayers() {\n        this.leftVideo.seek(this.rightVideo.currentTime());\n        this.setPosition(this.leftVideo.currentTime());\n    }\n\n    async playForward() {\n        if (this.state.playing) {\n            await this.pause();\n        }\n        this.leftVideo.playbackRate = 1;\n        this.rightVideo.playbackRate = 1;\n        return this.play();\n    }\n\n    async play() {\n        if(this.state.playing) {\n            return Promise.resolve();\n        }\n        await Promise.all([this.rightVideo.play(), this.leftVideo.play()])\n        this.setPlaying(true);\n\n    }\n\n    async createShareUrl() {\n        if (this.state.leftSource.type === 'file' || this.state.rightSource.type === 'file') {\n            alert(\"Shareable URL cannot be created since you are viewing a local file!\");\n        } else {\n            const leftVariantParam = isDashOrHls(this.state.leftSource.type) ?\n                `&leftVideoVariant=${this.state.leftSource.variant}` : \"\";\n            const rightVariantParam = isDashOrHls(this.state.rightSource.type) ?\n                `&rightVideoVariant=${this.state.rightSource.variant}` : \"\";\n            const path = `${window.location.host}${window.location.pathname}?position=${this.state.position}`\n            + `&leftVideoUrl=${this.state.leftSource.url}${leftVariantParam}`\n            + `&rightVideoUrl=${this.state.rightSource.url}${rightVariantParam}`\n            + (urlParams.get('hideSourceSelector') ? `&hideSourceSelector=${urlParams.get('hideSourceSelector')}` : \"\")\n            + (urlParams.get('hideHelp') ? `&hideHelp=${urlParams.get('hideHelp')}` : \"\")\n            console.log(\"Copying to clipboard: \" + path);\n            copyToClipboard(path)\n        }\n    }\n\n    async pause() {\n        if (!this.state.playing) {\n            return Promise.resolve();\n        }\n        this.rightVideo.pause();\n        this.leftVideo.pause();\n        this.setPlaying(false);\n        return this.seek(this.leftVideo.currentTime());\n    }\n\n    async seek(pos) {\n        this.setState({position: pos});\n        return Promise.all([this.leftVideo.seek(pos), this.rightVideo.seek(pos + this.state.rightVideoOffset * 0.04)]);\n    }\n\n    async onLeftVariantChange(variant) {\n        console.log(`left variant changed: ${JSON.stringify(variant)}`);\n        await this.changeVariant(this.leftVideo, variant)\n    }\n\n    async onRightVariantChange(variant) {\n        console.log(`right variant changed: ${JSON.stringify(variant)}`);\n        await this.changeVariant(this.rightVideo, variant)\n    }\n\n    async onLeftSourceChange(source) {\n        await this.changeSource(this.leftVideo, source);\n        this.setLeftSource(source);\n        this.splitView.focus();\n    }\n\n    async onRightSourceChange(source) {\n        await this.changeSource(this.rightVideo, source);\n        this.setRightSource(source);\n        this.splitView.focus();\n    }\n\n    async changeVariant(videoElement, variant) {\n        this.pauseAndExecute(videoElement, async () => {\n            this.setState({leftSource: Object.assign({}, this.state.leftSource, {variant})});\n            await videoElement.setVariant(variant);\n            //await this.step(0); // Seek to current time to improve dash switching time?\n        });\n    }\n\n    async changeSource(videoElement, source) {\n        console.log(`Change source ${source.url} ${source.variant}`);\n        this.pauseAndExecute(videoElement, async () => {\n            await videoElement.loadSource(source.url, source.variant);\n        });\n    }\n\n    async pauseAndExecute(videoElement, action) {\n        const wasPlaying = this.state.playing;\n        const wasPlayingReverse = this.state.playReverse;\n        await this.pause();\n        const time = videoElement.currentTime();\n        console.log(`${JSON.stringify(videoElement.props)} time: ${time}`);\n        await action();\n        await this.seek(time);\n        if (wasPlaying) {\n            await this.play();\n        }\n        if (wasPlayingReverse) {\n            await this.playReverse();\n        }\n    }\n\n    zoomIn() {\n        this.leftVideo.zoomIn();\n        this.rightVideo.zoomIn();\n        this.setState({userDefinedPanZoom: true});\n    }\n\n    zoomOut() {\n        this.leftVideo.zoomOut();\n        this.rightVideo.zoomOut();\n        this.setState({userDefinedPanZoom: true});\n    }\n\n    resetPanZoom() {\n        this.leftVideo.resetPanZoom();\n        this.rightVideo.resetPanZoom();\n        this.setState({userDefinedPanZoom: false});\n    }\n\n    pan(deltaX, deltaY) {\n        this.leftVideo.pan(deltaX, deltaY);\n        this.rightVideo.pan(deltaX, deltaY);\n        this.setState({userDefinedPanZoom: true});\n    }\n\n    shortCutHandlers = [\n        [COMMANDS.STEP_FORWARD, () => this.step(25)],\n        [COMMANDS.STEP_FORWARD_FRAME, () => this.step(1)],\n        [COMMANDS.STEP_BACKWARD_FRAME, () => this.step(-1)],\n        [COMMANDS.STEP_BACKWARD, () => this.step(-25)],\n        [COMMANDS.PLAY_PAUSE, () => this.playPause()],\n        [COMMANDS.FULLSCREEN, () => this.fullscreen()],\n        [COMMANDS.TOGGLE_TRACKING, () => this.toggleTracking()],\n        [COMMANDS.LEFT_ONLY, () => this.splitView.setSplitPosition(100)],\n        [COMMANDS.RIGHT_ONLY, () => this.splitView.setSplitPosition(0)],\n        [COMMANDS.TIMESHIFT_INCREASE, () => this.changeOffset(1)],\n        [COMMANDS.TIMESHIFT_DECREASE, () => this.changeOffset(-1)],\n        [COMMANDS.TIMESHIFT_RESET, () => this.changeOffset(0)],\n        [COMMANDS.ZOOM_IN, () => this.zoomIn()],\n        [COMMANDS.ZOOM_OUT, () => this.zoomOut()],\n        [COMMANDS.PAN_UP, () => this.pan(0, 10)],\n        [COMMANDS.PAN_DOWN, () => this.pan(0, -10)],\n        [COMMANDS.PAN_RIGHT, () => this.pan(-10, 0)],\n        [COMMANDS.PAN_LEFT, () => this.pan(10, 0)],\n        [COMMANDS.REST_PAN_ZOOM, () => this.resetPanZoom()],\n        [COMMANDS.SHARE, () => this.createShareUrl()],\n        [COMMANDS.PLAY, () => this.playForward()],\n        [COMMANDS.PAUSE, () => this.pause()],\n        [COMMANDS.TOGGLE_HELP, () => this.toggleShowHelp()],\n        [COMMANDS.TOGGLE_SPLIT_BORDER_VISIBLE, () => this.toggleSplitBorderVisible()]\n    ].reduce((result, [command, action]) => Object.assign(result, {[command.name]: action}), {});\n\n    toggleShowHelp() {\n        this.setState({showHelp: !this.state.showHelp});\n    }\n\n    toggleSplitBorderVisible() {\n        this.setState({splitBorderVisible: !this.state.splitBorderVisible});\n    }\n\n    onFullScreenChange() {\n        if (!this.state.userDefinedPanZoom) {\n            this.resetPanZoom();\n        }\n    }\n\n    componentDidMount() {\n        this.splitView.focus();\n        this.seek(startPosition)\n            .catch(e => console.trace(e));\n        this.videoViewer.addEventListener('fullscreenchange', this.onFullScreenChange);\n    }\n\n    componentWillUnmount(){\n        this.videoViewer.removeEventListener('fullscreenchange', this.onFullScreenChange);\n    }\n\n    render() {\n\n        return (\n            <div className=\"video-viewer\"\n                 tabIndex=\"0\"\n                 ref={this.setVideoViewerRef}>\n                <TimeDisplay position={this.state.position}/>\n                <HotKeys className=\"hotkeys-div\" keyMap={KEY_MAP} handlers={this.shortCutHandlers}>\n                    <SplitView tracking={this.state.tracking}\n                               splitBorderVisible={this.state.splitBorderVisible}\n                               onDrag={(dx,dy) => this.pan(dx,dy)}\n                               onClick={() => this.playPause()}\n                               ref={this.setSplitViewRef}\n                               leftSideContent={(<VideoPlayer muted ref={this.setLeftVideoRef} />)}\n                    >\n\n                        <VideoPlayer ref={this.setRightVideoRef}\n                                     onTimeUpdate={(time) => this.onTimeUpdate(time)}\n                                     onDurationSet={(duration) => this.onDurationSet(duration)}\n                        />\n                        <div className={cx(\"big-play-button\", {\n                            \"hidden\": this.state.playing || this.state.position !== 0\n                        })}\n                             onClick={() => this.play()}\n                        >\n                            <FiPlay size=\"32px\"/>\n                        </div>\n                    </SplitView>\n\n                    <VideoControls visible={this.state.showSourceSelector}\n                                   playing={this.state.playing}\n                                   onPlay={() => this.playPause()}\n                                   onStep={(n) => this.step(n)}\n                                   onFullscreen={() => this.fullscreen()}\n                                   duration={this.state.duration}\n                                   onSeek={(pos) => this.seek(pos)}\n                                   position={this.state.position}\n                    />\n\n                    <SourceSelector visible={this.state.showSourceSelector}\n                                    className=\"left-source-selector\"\n                                    defaultSource={DEFAULT_SOURCE_LEFT}\n                                    onChange={(value) => this.onLeftSourceChange(value)}\n                                    onVariantChange={(value) => this.onLeftVariantChange(value)}/>\n                    <SourceSelector visible={this.state.showSourceSelector}\n                                    className=\"right-source-selector\"\n                                    defaultSource={DEFAULT_SOURCE_RIGHT}\n                                    onChange={(value) => this.onRightSourceChange(value)}\n                                    onVariantChange={(value) => this.onRightVariantChange(value)}/>\n                    <OffsetIndicator offset={this.state.rightVideoOffset}/>\n                    <Help visible={this.state.showHelp} onClick={() => this.toggleShowHelp()} />\n                    <HelpButton onClick={() => this.toggleShowHelp()} />\n                </HotKeys>\n            </div>\n\n        );\n    }\n}\n\nexport default VideoViewer;","export function openFullscreen(elem) {\n    if (elem.requestFullscreen) {\n        elem.requestFullscreen();\n    } else if (elem.mozRequestFullScreen) { /* Firefox */\n        elem.mozRequestFullScreen();\n    } else if (elem.webkitRequestFullscreen) { /* Chrome, Safari and Opera */\n        elem.webkitRequestFullscreen();\n    } else if (elem.msRequestFullscreen) { /* IE/Edge */\n        elem.msRequestFullscreen();\n    }\n}\n\nexport function isFullscreen() {\n    return document.fullScreen || document.mozFullScreen || document.webkitIsFullScreen;\n}\n\nexport function closeFullscreen() {\n    if (document.exitFullscreen) {\n        document.exitFullscreen();\n    } else if (document.mozCancelFullScreen) { /* Firefox */\n        document.mozCancelFullScreen();\n    } else if (document.webkitExitFullscreen) { /* Chrome, Safari and Opera */\n        document.webkitExitFullscreen();\n    } else if (document.msExitFullscreen) { /* IE/Edge */\n        document.msExitFullscreen();\n    }\n}\n","export function copyToClipboard(text) {\n    let dummy = document.createElement(\"textarea\");\n    document.body.appendChild(dummy);\n    dummy.value = text;\n    dummy.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(dummy);\n}","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport VideoViewer from './components/VideoViewer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <VideoViewer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}